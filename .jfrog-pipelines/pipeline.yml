resources:
  - name: repo_res_autosar
    type: GitRepo
    configuration:
      gitProvider: hk_github
      path: harshkumar1/Adaptive-AUTOSAR
  - name: autosar_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: hk_artifactory
      buildName: autosar_example
      buildNumber: ${run_number}

pipelines:
  - name: autosar_example
    configuration:
      nodePool: default-dynamic-nodepool
      runtime:
        type: image
        image:
          custom:
            name: pipelines.jfrog.io/pipelines-runtime-images/pipelines-w19cpp-ckmake
            tag: '1'
    steps:
      - name: autosar_build
        type: Bash
        configuration:
          affinityGroup: autosar
          inputResources:
            - name: repo_res_autosar
          outputResources:
            - name: autosar_build_info
        execution:
          onExecute:
            - cd $res_repo_res_autosar_resourcePath
            - cmake -B ./build -DCMAKE_BUILD_TYPE=Debug
            - cmake --build ./build --config Debug
            - cp -r ./build $shared_workspace
      - name: autosar_test
        type: Bash
        configuration:
          affinityGroup: autosar
          inputResources:
            - name: autosar_build_info
        execution:
          onExecute:
            - cd $shared_workspace/
            - cd ./build
            #-rwxr-xr-x 1 root root 19579464 Mar 29 18:13 ara_unit_test
            ##-rwxr-xr-x 1 root root  3829896 Mar 29 18:13 arxml_unit_test
            - mkdir ara_unit_test
            - mkdir arxml_unit_test
            - cp bin/ara_unit_test ara_unit_test
            - cp bin/arxml_unit_test arxml_unit_test
            - ls -l
            - ctest -C Debug --output-junit test_results.xml --test-dir ./ara_unit_test
            - save_tests test_results.xml