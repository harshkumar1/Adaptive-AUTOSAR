resources:
  - name: repo_res_autosar
    type: GitRepo
    configuration:
      gitProvider: hk_github
      path: harshkumar1/Adaptive-AUTOSAR
  - name: autosar_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: hk_artifactory
      buildName: autosar_example
      buildNumber: ${run_number}

pipelines:
  - name: autosar_example
    configuration:
      nodePool: default-dynamic-nodepool
      inputResources:
        - name: repo_res_autosar
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u20cpp
            tag: '9'
    steps:
      - name: autosar_build
        type: Bash
        configuration:
          affinityGroup: autosar
          outputResources:
            - name: autosar_build_info
        execution:
          onExecute:
            - cd $res_repo_res_autosar_resourcePath
            #- wget https://github.com/Kitware/CMake/releases/download/v3.26.1/cmake-3.26.1-linux-x86_64.sh
            - sudo apt install cmake
            #- sh cmake-3.26.1-linux-x86_64.sh
            - cmake -B ./build -DCMAKE_BUILD_TYPE=Debug
            - cmake --build ./build --config Debug
            - cp -r ./build $shared_workspace
            #- ctest -C Debug
            #- ls -l
            #- save_tests $res_src_repo_resourcePath/build/Testing/
      - name: autosar_test
        type: Bash
        configuration:
          affinityGroup: autosar
          inputResources:
            - name: autosar_build_info
        execution:
          onExecute:
            - sudo apt install cmake
            - cd $shared_workspace/
            - ls -l
            - cd ./build
            - ls -l
            - ctest -C Debug --output-junit test_results.xml
            - ls -l
            - save_tests test_results.xml